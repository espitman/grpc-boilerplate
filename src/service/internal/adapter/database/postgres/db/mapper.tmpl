package db

import (
	"{{.Module}}/internal/adapter/database/postgres/ent"
	"{{.Module}}/internal/core/domain"
)

func {{.Domain}}SchemaTo{{.Domain|Upper}}DomainPointerMapper(c *ent.{{.Domain|Upper}}) *domain.{{.Domain|Upper}} {
	return &domain.{{.Domain|Upper}}{
    ID:     c.ID,
    Name:   c.Name,
	}
}

func {{.Domain}}SchemasTo{{.Domain|Upper}}DomainsPointerMapper(cs []*ent.{{.Domain|Upper}}) []*domain.{{.Domain|Upper}} {
	resp := make([]*domain.{{.Domain|Upper}}, len(cs))
	for i, c := range cs {
		resp[i] = {{.Domain}}SchemaTo{{.Domain|Upper}}DomainPointerMapper(c)
	}
	return resp
}

func {{.Domain}}DomainTo{{.Domain|Upper}}Schema(d domain.{{.Domain|Upper}}) *ent.{{.Domain|Upper}} {
	return &ent.{{.Domain|Upper}}{
		Name:            d.Name,
	}
}

func {{.Domain}}DomainsTo{{.Domain|Upper}}SchemasMapper(ds []domain.{{.Domain|Upper}}) []*ent.{{.Domain|Upper}} {
	resp := make([]*ent.{{.Domain|Upper}}, len(ds))
	for i, d := range ds {
		resp[i] = {{.Domain}}DomainTo{{.Domain|Upper}}Schema(d)
	}
	return resp
}
