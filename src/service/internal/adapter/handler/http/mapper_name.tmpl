package http

import (
	"{{.Module}}/internal/core/domain"
)

func {{.Domain}}CreateRequestDtoTo{{.Domain|Upper}}DomainMapper(dto {{.Domain}}CreateRequestDto) domain.{{.Domain|Upper}} {
	return domain.{{.Domain|Upper}}{
		Name:   dto.Name,
	}
}

func {{.Domain}}DomainTo{{.Domain|Upper}}GetResponseDtoMapper(d *domain.{{.Domain|Upper}}) {{.Domain}}GetResponseDto {
	var resp {{.Domain}}GetResponseDto
	resp.Payload.{{.Domain|Upper}} = {{.Domain}}Dto{
		ID:   d.ID,
        {{- if .DB.MongoDB }}
		MongoID: d.MongoID,
		{{- end }}
		Name:	d.Name,
	}
	return resp
}


func {{.Domain}}UpdateRequestDtoTo{{.Domain|Upper}}DomainMapper(dto {{.Domain}}UpdateRequestDto) domain.{{.Domain|Upper}} {
	return domain.{{.Domain|Upper}}{
		Name: dto.Name,
	}
}

func {{.Domain}}DomainTo{{.Domain|Upper}}UpdateResponseDtoMapper(d *domain.{{.Domain|Upper}}) {{.Domain}}UpdateResponseDto {
	var resp {{.Domain}}UpdateResponseDto
	resp.Payload.{{.Domain|Upper}} = {{.Domain}}Dto{
		ID:   d.ID,
        {{- if .DB.MongoDB }}
		MongoID: d.MongoID,
		{{- end }}
		Name: d.Name,
	}
	return resp
}

func {{.Domain}}DomainTo{{.Domain|Upper}}DeleteResponseDtoMapper(d *domain.{{.Domain|Upper}}) {{.Domain}}DeleteResponseDto {
	var resp {{.Domain}}DeleteResponseDto
	resp.Payload.{{.Domain|Upper}} = {{.Domain}}Dto{
		ID:   d.ID,
        {{- if .DB.MongoDB }}
		MongoID: d.MongoID,
		{{- end }}
		Name: d.Name,
	}
	return resp
}

